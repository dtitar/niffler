name: frontend_deploy_prod
on:
  push:
    branches:
      - master
    paths:
      - 'niffler-frontend/**'

jobs:
  checkout:
    runs-on: prod-runner
    steps:
      - uses: actions/checkout@v3

  deploy:
    runs-on: prod-runner
    needs: checkout
    steps:
      - name: Set front version
        uses: falti/dotenv-action@v1.0.4
        id: dotenv
      - name: Retrieve niffler-auth version
        run: |
          echo "::set-output name=version::$(bash ./gradlew :niffler-auth:printVersion -q)"
        id: auth_version
      - name: Retrieve niffler-currency version
        run: |
          echo "::set-output name=version::$(bash ./gradlew :niffler-currency:printVersion -q)"
        id: currency_version
      - name: Retrieve niffler-gateway version
        run: |
          echo "::set-output name=version::$(bash ./gradlew :niffler-gateway:printVersion -q)"
        id: gateway_version
      - name: Retrieve niffler-spend version
        run: |
          echo "::set-output name=version::$(bash ./gradlew :niffler-spend:printVersion -q)"
        id: spend_version
      - name: Retrieve niffler-userdata version
        run: |
          echo "::set-output name=version::$(bash ./gradlew :niffler-userdata:printVersion -q)"
        id: userdata_version
      - name: Push required props to GITHUB_ENV
        run: |
          echo "PROFILE=prod" >> $GITHUB_ENV
          echo "PREFIX=${{ vars.DOCKER_HUB_ACC }}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" >> $GITHUB_ENV
          echo "AUTH_VER=${{ steps.auth_version.outputs.version }}" >> $GITHUB_ENV
          echo "CURRENCY_VER=${{ steps.currency_version.outputs.version }}" >> $GITHUB_ENV
          echo "GATEWAY_VER=${{ steps.gateway_version.outputs.version }}" >> $GITHUB_ENV
          echo "SPEND_VER=${{ steps.spend_version.outputs.version }}" >> $GITHUB_ENV
          echo "USERDATA_VER=${{ steps.userdata_version.outputs.version }}" >> $GITHUB_ENV
          echo "FRONT_VER=${{ steps.dotenv.outputs.front_version }}" >> $GITHUB_ENV
          echo "FRONT_IMAGE=niffler-frontend" >> $GITHUB_ENV
      - name: build
        working-directory: ./niffler-frontend
        run: |
          pwd
          docker login --username ${{ vars.DOCKER_HUB_ACC }} --password "${{ secrets.DOCKER_HUB_PASSWORD }}"
          echo "### niffler-front version will be used: ${{ env.PREFIX }}/${{ env.FRONT_IMAGE }}-${{ env.PROFILE }}:${{ env.FRONT_VER }}"
          bash ./docker-build.sh prod push
      - name: deploy
        run: |
          docker-compose -f docker-compose.ci.yml pull frontend.niffler.dc
          docker-compose -f docker-compose.ci.yml stop frontend.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps frontend.niffler.dc
          docker system prune  -a -f
          echo "Done!"
